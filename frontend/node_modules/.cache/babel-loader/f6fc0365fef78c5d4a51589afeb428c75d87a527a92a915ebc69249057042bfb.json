{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      user: {},\n      activeTab: 'overview',\n      showUserMenu: false,\n      showAssignModal: false,\n      showCreateOrder: false,\n      showCreateTechnician: false,\n      showOrderDetailModal: false,\n      selectedOrder: null,\n      selectedOrderDetail: null,\n      orderFilter: '',\n      userSearchTerm: '',\n      isLoading: false,\n      allOrders: [],\n      technicians: [],\n      users: [],\n      dashboardStats: {\n        totalOrders: 0,\n        pendingOrders: 0,\n        completedOrders: 0,\n        activeTechnicians: 0\n      },\n      statistics: {\n        totalRevenue: 0,\n        laborCost: 0,\n        materialCost: 0,\n        technicianStats: [],\n        negativeFeedback: []\n      },\n      statisticsDateRange: {\n        start: '',\n        end: ''\n      },\n      assignForm: {\n        technicianIds: [],\n        laborCost: 0,\n        materialCost: 0\n      }\n    };\n  },\n  computed: {\n    isManager() {\n      return this.user.role === 'MANAGER';\n    },\n    isSuperAdmin() {\n      return this.user.role === 'SUPER_ADMIN';\n    },\n    filteredOrders() {\n      if (!this.orderFilter) return this.allOrders;\n      return this.allOrders.filter(order => order.status === this.orderFilter);\n    },\n    filteredUsers() {\n      if (!this.userSearchTerm) return this.users;\n      return this.users.filter(user => user.name.toLowerCase().includes(this.userSearchTerm.toLowerCase()) || user.username.toLowerCase().includes(this.userSearchTerm.toLowerCase()));\n    },\n    recentOrders() {\n      return this.allOrders.slice(0, 10);\n    },\n    availableTechnicians() {\n      return this.technicians.filter(tech => tech.status !== 'INACTIVE');\n    },\n    totalCost() {\n      return (parseFloat(this.assignForm.laborCost) || 0) + (parseFloat(this.assignForm.materialCost) || 0);\n    }\n  },\n  created() {\n    this.loadUserInfo();\n    this.loadData();\n  },\n  methods: {\n    loadUserInfo() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n        console.log('加载的管理员数据:', this.user);\n        if (!this.user.id) {\n          console.error('管理员数据中缺少ID字段:', this.user);\n          this.$emit('message', '用户数据错误，请重新登录', 'error');\n          this.logout();\n        }\n      } else {\n        console.error('localStorage中没有管理员数据');\n        this.$emit('message', '未找到用户信息，请重新登录', 'error');\n        this.logout();\n      }\n    },\n    async loadData() {\n      try {\n        this.isLoading = true;\n\n        // 先加载基础数据\n        await this.loadOrders();\n        await this.loadTechnicians();\n        if (this.isSuperAdmin) {\n          await this.loadUsers();\n        }\n\n        // 然后基于基础数据计算统计信息\n        await this.loadDashboardStats();\n\n        // 如果是超级管理员，初始化统计分析数据\n        if (this.isSuperAdmin) {\n          this.calculateLocalStatistics();\n        }\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.$emit('message', '加载数据失败', 'error');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async refreshData() {\n      this.$emit('message', '正在刷新数据...', 'info');\n      await this.loadData();\n      this.$emit('message', '数据刷新完成', 'success');\n    },\n    async loadOrders() {\n      try {\n        const response = await this.$axios.get('/repair-orders');\n        this.allOrders = Array.isArray(response.data) ? response.data : [];\n        console.log('从API加载的订单数据:', this.allOrders);\n        console.log('订单数量:', this.allOrders.length);\n      } catch (error) {\n        console.error('加载订单失败:', error);\n        console.error('错误详情:', error.response?.data || error.message);\n        this.allOrders = [];\n        this.$emit('message', '加载订单数据失败: ' + (error.response?.data?.message || error.message), 'error');\n      }\n    },\n    async loadTechnicians() {\n      try {\n        const response = await this.$axios.get('/technicians');\n        this.technicians = Array.isArray(response.data) ? response.data : [];\n        console.log('从API加载的技师数据:', this.technicians);\n        console.log('技师数量:', this.technicians.length);\n      } catch (error) {\n        console.error('加载技师失败:', error);\n        console.error('错误详情:', error.response?.data || error.message);\n        this.technicians = [];\n        this.$emit('message', '加载技师数据失败: ' + (error.response?.data?.message || error.message), 'error');\n      }\n    },\n    async loadUsers() {\n      try {\n        const response = await this.$axios.get('/users');\n        this.users = Array.isArray(response.data) ? response.data : [];\n        console.log('加载的用户数据:', this.users);\n      } catch (error) {\n        console.error('加载用户失败:', error);\n        this.users = [];\n      }\n    },\n    async loadDashboardStats() {\n      try {\n        // 尝试从API获取统计数据\n        const response = await this.$axios.get('/admins/dashboard-stats');\n        this.dashboardStats = response.data;\n        console.log('从API加载的统计数据:', this.dashboardStats);\n      } catch (error) {\n        console.error('加载统计数据失败，使用本地计算:', error);\n        // 确保数据已初始化\n        const orders = Array.isArray(this.allOrders) ? this.allOrders : [];\n        const techs = Array.isArray(this.technicians) ? this.technicians : [];\n\n        // 基于本地数据计算统计信息\n        this.dashboardStats = {\n          totalOrders: orders.length,\n          pendingOrders: orders.filter(o => o.status === 'PENDING').length,\n          completedOrders: orders.filter(o => o.status === 'COMPLETED').length,\n          activeTechnicians: techs.length // 移除状态过滤，因为模拟数据没有status字段\n        };\n        console.log('本地计算的统计数据:', this.dashboardStats);\n      }\n    },\n    async loadStatistics() {\n      if (!this.isSuperAdmin) return;\n      try {\n        // 尝试从API加载各种统计数据\n        const [revenueStats, techStats, feedbackStats] = await Promise.all([this.$axios.get('/repair-orders/analysis/monthly', {\n          params: {\n            year: 2024,\n            month: 12\n          }\n        }).catch(() => null), this.$axios.get('/repair-orders/task-statistics', {\n          params: {\n            startDate: this.statisticsDateRange.start,\n            endDate: this.statisticsDateRange.end\n          }\n        }).catch(() => null), this.$axios.get('/repair-orders/negative-feedback').catch(() => null)]);\n\n        // 如果API调用失败，基于本地数据计算统计信息\n        if (!revenueStats || !techStats || !feedbackStats) {\n          this.calculateLocalStatistics();\n        } else {\n          this.statistics = {\n            totalRevenue: revenueStats.data?.total_cost || 0,\n            laborCost: revenueStats.data?.total_labor_cost || 0,\n            materialCost: revenueStats.data?.total_material_cost || 0,\n            technicianStats: techStats.data || [],\n            negativeFeedback: feedbackStats.data || []\n          };\n        }\n      } catch (error) {\n        console.error('加载统计数据失败，使用本地计算:', error);\n        this.calculateLocalStatistics();\n      }\n    },\n    calculateLocalStatistics() {\n      // 确保数据已初始化\n      if (!Array.isArray(this.allOrders)) {\n        this.allOrders = [];\n      }\n      if (!Array.isArray(this.technicians)) {\n        this.technicians = [];\n      }\n\n      // 基于本地订单数据计算统计信息\n      const completedOrders = this.allOrders.filter(o => o.status === 'COMPLETED');\n\n      // 计算收入统计\n      const totalRevenue = completedOrders.reduce((sum, order) => sum + (order.totalCost || 0), 0);\n      const laborCost = completedOrders.reduce((sum, order) => sum + (order.laborCost || 0), 0);\n      const materialCost = completedOrders.reduce((sum, order) => sum + (order.materialCost || 0), 0);\n\n      // 计算技师统计\n      const technicianStats = this.technicians.map(tech => {\n        const techOrders = completedOrders.filter(order => order.technicians && order.technicians.some(t => t.id === tech.id));\n        return {\n          technicianId: tech.id,\n          technicianName: tech.name,\n          skillType: tech.skillType,\n          completedTasks: techOrders.length,\n          totalEarnings: techOrders.reduce((sum, order) => sum + (order.laborCost || 0), 0),\n          averageRating: 4.5 // 模拟评分\n        };\n      });\n\n      // 模拟负面反馈数据\n      const negativeFeedback = [{\n        orderId: 1,\n        orderNumber: 'RO-2024-001',\n        rating: 2,\n        comment: '服务态度需要改进',\n        technicianName: '李师傅',\n        date: '2024-12-20T10:00:00'\n      }];\n      this.statistics = {\n        totalRevenue,\n        laborCost,\n        materialCost,\n        technicianStats,\n        negativeFeedback\n      };\n    },\n    assignOrder(order) {\n      this.selectedOrder = order;\n      this.assignForm = {\n        technicianIds: [],\n        laborCost: 0,\n        materialCost: 0\n      };\n      this.showAssignModal = true;\n    },\n    async confirmAssign() {\n      try {\n        const updateData = {\n          technicianIds: this.assignForm.technicianIds,\n          laborCost: parseFloat(this.assignForm.laborCost),\n          materialCost: parseFloat(this.assignForm.materialCost),\n          totalCost: this.totalCost,\n          status: 'ASSIGNED'\n        };\n        await this.$axios.put(`/repair-orders/${this.selectedOrder.id}`, updateData);\n\n        // 更新本地数据\n        const orderIndex = this.allOrders.findIndex(o => o.id === this.selectedOrder.id);\n        if (orderIndex !== -1) {\n          this.allOrders[orderIndex] = {\n            ...this.allOrders[orderIndex],\n            ...updateData\n          };\n        }\n        this.closeAssignModal();\n        this.$emit('message', '订单分配成功', 'success');\n        // 重新加载数据以更新统计信息\n        await this.loadData();\n      } catch (error) {\n        console.error('分配订单失败:', error);\n        this.$emit('message', '分配订单失败', 'error');\n      }\n    },\n    closeAssignModal() {\n      this.showAssignModal = false;\n      this.selectedOrder = null;\n    },\n    async viewOrderDetail(order) {\n      try {\n        // 获取订单详细信息\n        const response = await this.$axios.get(`/repair-orders/${order.id}`);\n        this.selectedOrderDetail = response.data;\n        this.showOrderDetailModal = true;\n      } catch (error) {\n        console.error('获取订单详情失败:', error);\n        this.$emit('message', '获取订单详情失败', 'error');\n      }\n    },\n    closeOrderDetailModal() {\n      this.showOrderDetailModal = false;\n      this.selectedOrderDetail = null;\n    },\n    editOrder(order) {\n      // 实现订单编辑\n      this.$emit('message', '订单编辑功能开发中', 'info');\n    },\n    editTechnician(technician) {\n      // 实现技师编辑\n      this.$emit('message', '技师编辑功能开发中', 'info');\n    },\n    async deleteTechnician(technician) {\n      if (confirm(`确定要删除技师 ${technician.name} 吗？此操作不可撤销。`)) {\n        try {\n          await this.$axios.delete(`/technicians/${technician.id}`);\n          this.$emit('message', '技师删除成功', 'success');\n          // 重新加载技师列表\n          await this.loadTechnicians();\n          // 重新加载统计数据\n          await this.loadDashboardStats();\n        } catch (error) {\n          console.error('删除技师失败:', error);\n          this.$emit('message', '删除技师失败: ' + (error.response?.data?.message || error.message), 'error');\n        }\n      }\n    },\n    viewUserDetail(user) {\n      // 实现用户详情查看\n      this.$emit('message', '用户详情功能开发中', 'info');\n    },\n    toggleUserMenu() {\n      this.showUserMenu = !this.showUserMenu;\n    },\n    getRoleName(role) {\n      const roleMap = {\n        'MANAGER': '经理',\n        'SUPER_ADMIN': '超级管理员'\n      };\n      return roleMap[role] || role;\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待处理',\n        'ASSIGNED': '已分配',\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    getSkillTypeName(skillType) {\n      const skillMap = {\n        'MECHANIC': '机械维修',\n        'ELECTRICIAN': '电气维修',\n        'BODY_WORK': '车身维修',\n        'PAINT': '喷漆',\n        'DIAGNOSTIC': '诊断'\n      };\n      return skillMap[skillType] || skillType;\n    },\n    getVehicleDisplay(order) {\n      if (order.vehicle) {\n        const {\n          licensePlate,\n          brand,\n          model,\n          year\n        } = order.vehicle;\n        if (licensePlate && brand && model) {\n          return `${licensePlate} - ${brand} ${model}${year ? ` (${year})` : ''}`;\n        } else if (licensePlate) {\n          return licensePlate;\n        }\n      }\n      return '未知车辆';\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('zh-CN');\n    },\n    logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userRole');\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","activeTab","showUserMenu","showAssignModal","showCreateOrder","showCreateTechnician","showOrderDetailModal","selectedOrder","selectedOrderDetail","orderFilter","userSearchTerm","isLoading","allOrders","technicians","users","dashboardStats","totalOrders","pendingOrders","completedOrders","activeTechnicians","statistics","totalRevenue","laborCost","materialCost","technicianStats","negativeFeedback","statisticsDateRange","start","end","assignForm","technicianIds","computed","isManager","role","isSuperAdmin","filteredOrders","filter","order","status","filteredUsers","toLowerCase","includes","username","recentOrders","slice","availableTechnicians","tech","totalCost","parseFloat","created","loadUserInfo","loadData","methods","userData","localStorage","getItem","JSON","parse","console","log","id","error","$emit","logout","loadOrders","loadTechnicians","loadUsers","loadDashboardStats","calculateLocalStatistics","refreshData","response","$axios","get","Array","isArray","length","message","orders","techs","o","loadStatistics","revenueStats","techStats","feedbackStats","Promise","all","params","year","month","catch","startDate","endDate","total_cost","total_labor_cost","total_material_cost","reduce","sum","map","techOrders","some","t","technicianId","technicianName","skillType","completedTasks","totalEarnings","averageRating","orderId","orderNumber","rating","comment","date","assignOrder","confirmAssign","updateData","put","orderIndex","findIndex","closeAssignModal","viewOrderDetail","closeOrderDetailModal","editOrder","editTechnician","technician","deleteTechnician","confirm","delete","viewUserDetail","toggleUserMenu","getRoleName","roleMap","getStatusText","statusMap","getSkillTypeName","skillMap","getVehicleDisplay","vehicle","licensePlate","brand","model","formatDate","dateString","Date","toLocaleDateString","removeItem","$router","push"],"sources":["src/views/AdminDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"admin-dashboard\">\n    <!-- 顶部导航栏 -->\n    <header class=\"dashboard-header\">\n      <div class=\"header-left\">\n        <div class=\"logo\">\n          <i class=\"fas fa-shield-alt\"></i>\n          <span>管理员控制台</span>\n        </div>\n        <nav class=\"nav-menu\">\n          <a href=\"#\" @click=\"activeTab = 'overview'\" :class=\"{ active: activeTab === 'overview' }\">\n            <i class=\"fas fa-home\"></i> 概览\n          </a>\n          <a v-if=\"isManager || isSuperAdmin\" href=\"#\" @click=\"activeTab = 'orders'\" :class=\"{ active: activeTab === 'orders' }\">\n            <i class=\"fas fa-clipboard-list\"></i> 订单管理\n          </a>\n          <a v-if=\"isManager || isSuperAdmin\" href=\"#\" @click=\"activeTab = 'technicians'\" :class=\"{ active: activeTab === 'technicians' }\">\n            <i class=\"fas fa-users-cog\"></i> 技师管理\n          </a>\n          <a v-if=\"isSuperAdmin\" href=\"#\" @click=\"activeTab = 'statistics'\" :class=\"{ active: activeTab === 'statistics' }\">\n            <i class=\"fas fa-chart-bar\"></i> 统计分析\n          </a>\n          <a v-if=\"isSuperAdmin\" href=\"#\" @click=\"activeTab = 'users'\" :class=\"{ active: activeTab === 'users' }\">\n            <i class=\"fas fa-users\"></i> 用户管理\n          </a>\n        </nav>\n      </div>\n      <div class=\"header-right\">\n        <div class=\"user-menu\" @click=\"toggleUserMenu\">\n          <div class=\"user-avatar\">\n            <i class=\"fas fa-user-shield\"></i>\n          </div>\n          <span class=\"user-name\">{{ user.name || user.username }}</span>\n          <span class=\"user-role\">{{ getRoleName(user.role) }}</span>\n          <i class=\"fas fa-chevron-down\"></i>\n        </div>\n        <div v-if=\"showUserMenu\" class=\"user-dropdown\">\n          <a href=\"#\" @click=\"activeTab = 'profile'\">\n            <i class=\"fas fa-user-edit\"></i> 个人资料\n          </a>\n          <a href=\"#\" @click=\"logout\">\n            <i class=\"fas fa-sign-out-alt\"></i> 登出\n          </a>\n        </div>\n      </div>\n    </header>\n\n    <!-- 主内容区域 -->\n    <main class=\"dashboard-main\">\n      <!-- 概览页面 -->\n      <div v-if=\"activeTab === 'overview'\" class=\"tab-content\">\n        <div class=\"welcome-section\">\n          <div class=\"welcome-content\">\n            <div>\n              <h1>欢迎，{{ user.name || user.username }}！</h1>\n              <div class=\"role-badge\">\n                <i class=\"fas fa-crown\"></i>\n                <span>{{ getRoleName(user.role) }}</span>\n              </div>\n            </div>\n            <button class=\"btn btn-outline\" @click=\"refreshData\" :disabled=\"isLoading\">\n              <i class=\"fas fa-sync-alt\" :class=\"{ 'fa-spin': isLoading }\"></i>\n              {{ isLoading ? '刷新中...' : '刷新数据' }}\n            </button>\n          </div>\n        </div>\n\n        <!-- 统计卡片 -->\n        <div class=\"stats-grid\">\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #3b82f6, #2563eb);\">\n              <i class=\"fas fa-clipboard-list\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ dashboardStats.totalOrders }}</h3>\n              <p>总订单数</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #f59e0b, #d97706);\">\n              <i class=\"fas fa-clock\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ dashboardStats.pendingOrders }}</h3>\n              <p>待处理订单</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #10b981, #059669);\">\n              <i class=\"fas fa-check-circle\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ dashboardStats.completedOrders }}</h3>\n              <p>已完成订单</p>\n            </div>\n          </div>\n          <div class=\"stat-card\">\n            <div class=\"stat-icon\" style=\"background: linear-gradient(135deg, #8b5cf6, #7c3aed);\">\n              <i class=\"fas fa-users-cog\"></i>\n            </div>\n            <div class=\"stat-content\">\n              <h3>{{ dashboardStats.activeTechnicians }}</h3>\n              <p>活跃技师</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 快速操作 -->\n        <div class=\"quick-actions\">\n          <h2>快速操作</h2>\n          <div class=\"action-grid\">\n            <div v-if=\"isManager || isSuperAdmin\" class=\"action-card\" @click=\"activeTab = 'orders'\">\n              <i class=\"fas fa-plus-circle\"></i>\n              <h3>分配订单</h3>\n              <p>为新订单分配技师和定价</p>\n            </div>\n            <div v-if=\"isManager || isSuperAdmin\" class=\"action-card\" @click=\"activeTab = 'technicians'\">\n              <i class=\"fas fa-user-plus\"></i>\n              <h3>管理技师</h3>\n              <p>添加或编辑技师信息</p>\n            </div>\n            <div v-if=\"isSuperAdmin\" class=\"action-card\" @click=\"activeTab = 'statistics'\">\n              <i class=\"fas fa-chart-line\"></i>\n              <h3>查看报表</h3>\n              <p>查看详细统计分析</p>\n            </div>\n            <div v-if=\"isSuperAdmin\" class=\"action-card\" @click=\"activeTab = 'users'\">\n              <i class=\"fas fa-users\"></i>\n              <h3>用户管理</h3>\n              <p>管理系统用户</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- 最近订单 -->\n        <div class=\"recent-orders\">\n          <h2>最近订单</h2>\n          <div class=\"orders-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>订单号</th>\n                  <th>客户</th>\n                  <th>车辆</th>\n                  <th>状态</th>\n                  <th>创建时间</th>\n                  <th>操作</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"order in recentOrders\" :key=\"order.id\">\n                  <td>{{ order.orderNumber }}</td>\n                  <td>{{ order.user?.name || '未知' }}</td>\n                  <td>{{ getVehicleDisplay(order) }}</td>\n                  <td>\n                    <span :class=\"['status-badge', order.status.toLowerCase()]\">\n                      {{ getStatusText(order.status) }}\n                    </span>\n                  </td>\n                  <td>{{ formatDate(order.createdAt) }}</td>\n                  <td>\n                    <button class=\"btn btn-sm btn-primary\" @click=\"viewOrderDetail(order)\">\n                      查看\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <!-- 订单管理页面 -->\n      <div v-if=\"activeTab === 'orders'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>订单管理</h2>\n          <div class=\"order-filters\">\n            <select v-model=\"orderFilter\" class=\"form-input\">\n              <option value=\"\">全部状态</option>\n              <option value=\"PENDING\">待处理</option>\n              <option value=\"ASSIGNED\">已分配</option>\n              <option value=\"IN_PROGRESS\">进行中</option>\n              <option value=\"COMPLETED\">已完成</option>\n            </select>\n          </div>\n        </div>\n\n        <div class=\"orders-container\">\n          <div v-if=\"filteredOrders.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-clipboard-list\"></i>\n            <h3>暂无订单</h3>\n            <p>还没有维修订单</p>\n          </div>\n          <div v-for=\"order in filteredOrders\" :key=\"order.id\" class=\"order-card\">\n            <div class=\"order-header\">\n              <div>\n                <h3>{{ order.orderNumber }}</h3>\n                <p>{{ order.description }}</p>\n              </div>\n              <span :class=\"['status-badge', order.status.toLowerCase()]\">\n                {{ getStatusText(order.status) }}\n              </span>\n            </div>\n            <div class=\"order-body\">\n              <div class=\"order-info\">\n                <div class=\"info-item\">\n                  <i class=\"fas fa-user\"></i>\n                  <span>客户: {{ order.user?.name || '未知' }}</span>\n                </div>\n                <div class=\"info-item\">\n                  <i class=\"fas fa-car\"></i>\n                  <span>车辆: {{ getVehicleDisplay(order) }}</span>\n                </div>\n                <div class=\"info-item\">\n                  <i class=\"fas fa-calendar\"></i>\n                  <span>创建: {{ formatDate(order.createdAt) }}</span>\n                </div>\n                <div class=\"info-item\">\n                  <i class=\"fas fa-dollar-sign\"></i>\n                  <span>费用: ¥{{ order.totalCost || 0 }}</span>\n                </div>\n              </div>\n              <div v-if=\"order.technicians && order.technicians.length > 0\" class=\"assigned-technicians\">\n                <h4>分配技师:</h4>\n                <div class=\"technician-list\">\n                  <span v-for=\"tech in order.technicians\" :key=\"tech.id\" class=\"technician-tag\">\n                    {{ tech.name }} ({{ getSkillTypeName(tech.skillType) }})\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"order-footer\">\n              <button v-if=\"order.status === 'PENDING'\" class=\"btn btn-primary\" @click=\"assignOrder(order)\">\n                <i class=\"fas fa-user-plus\"></i> 分配技师\n              </button>\n              <button class=\"btn btn-outline\" @click=\"viewOrderDetail(order)\">\n                <i class=\"fas fa-eye\"></i> 查看详情\n              </button>\n              <button class=\"btn btn-outline\" @click=\"editOrder(order)\">\n                <i class=\"fas fa-edit\"></i> 编辑\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 技师管理页面 -->\n      <div v-if=\"activeTab === 'technicians'\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>技师管理</h2>\n          <button class=\"btn btn-primary\" @click=\"showCreateTechnician = true\">\n            <i class=\"fas fa-plus\"></i> 添加技师\n          </button>\n        </div>\n\n        <div class=\"technicians-container\">\n          <div v-if=\"technicians.length === 0\" class=\"empty-state\">\n            <i class=\"fas fa-users-cog\"></i>\n            <h3>暂无技师</h3>\n            <p>还没有添加技师</p>\n          </div>\n          <div v-for=\"technician in technicians\" :key=\"technician.id\" class=\"technician-card\">\n            <div class=\"tech-avatar\">\n              <i class=\"fas fa-user-hard-hat\"></i>\n            </div>\n            <div class=\"tech-info\">\n              <h3>{{ technician.name }}</h3>\n              <p class=\"tech-id\">员工ID: {{ technician.employeeId }}</p>\n              <div class=\"tech-details\">\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-cogs\"></i>\n                  <span>{{ getSkillTypeName(technician.skillType) }}</span>\n                </div>\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-dollar-sign\"></i>\n                  <span>¥{{ technician.hourlyRate }}/小时</span>\n                </div>\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-phone\"></i>\n                  <span>{{ technician.phone }}</span>\n                </div>\n                <div class=\"detail-item\">\n                  <i class=\"fas fa-envelope\"></i>\n                  <span>{{ technician.email }}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"tech-actions\">\n              <button class=\"btn btn-outline btn-sm\" @click=\"editTechnician(technician)\">\n                <i class=\"fas fa-edit\"></i> 编辑\n              </button>\n              <button class=\"btn btn-danger btn-sm\" @click=\"deleteTechnician(technician)\">\n                <i class=\"fas fa-trash\"></i> 删除\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 统计分析页面 (仅超级管理员) -->\n      <div v-if=\"activeTab === 'statistics' && isSuperAdmin\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>统计分析</h2>\n          <div class=\"date-filters\">\n            <input v-model=\"statisticsDateRange.start\" type=\"date\" class=\"form-input\">\n            <span>至</span>\n            <input v-model=\"statisticsDateRange.end\" type=\"date\" class=\"form-input\">\n            <button class=\"btn btn-primary\" @click=\"loadStatistics\">\n              <i class=\"fas fa-search\"></i> 查询\n            </button>\n          </div>\n        </div>\n\n        <div class=\"statistics-container\">\n          <!-- 收入统计 -->\n          <div class=\"stat-section\">\n            <h3>收入统计</h3>\n            <div class=\"revenue-stats\">\n              <div class=\"revenue-card\">\n                <h4>总收入</h4>\n                <div class=\"amount\">¥{{ statistics.totalRevenue }}</div>\n              </div>\n              <div class=\"revenue-card\">\n                <h4>工时费</h4>\n                <div class=\"amount\">¥{{ statistics.laborCost }}</div>\n              </div>\n              <div class=\"revenue-card\">\n                <h4>材料费</h4>\n                <div class=\"amount\">¥{{ statistics.materialCost }}</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- 技师工作量统计 -->\n          <div class=\"stat-section\">\n            <h3>技师工作量统计</h3>\n            <div class=\"technician-stats\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>技师</th>\n                    <th>技能类型</th>\n                    <th>完成任务数</th>\n                    <th>总收入</th>\n                    <th>平均评分</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"stat in statistics.technicianStats\" :key=\"stat.technicianId\">\n                    <td>{{ stat.technicianName }}</td>\n                    <td>{{ getSkillTypeName(stat.skillType) }}</td>\n                    <td>{{ stat.completedTasks }}</td>\n                    <td>¥{{ stat.totalEarnings }}</td>\n                    <td>{{ stat.averageRating }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <!-- 负面反馈统计 -->\n          <div class=\"stat-section\">\n            <h3>负面反馈统计</h3>\n            <div class=\"feedback-stats\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>订单号</th>\n                    <th>评分</th>\n                    <th>反馈内容</th>\n                    <th>技师</th>\n                    <th>日期</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"feedback in statistics.negativeFeedback\" :key=\"feedback.orderId\">\n                    <td>{{ feedback.orderNumber }}</td>\n                    <td>{{ feedback.rating }}星</td>\n                    <td>{{ feedback.comment }}</td>\n                    <td>{{ feedback.technicianName }}</td>\n                    <td>{{ formatDate(feedback.date) }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 用户管理页面 (仅超级管理员) -->\n      <div v-if=\"activeTab === 'users' && isSuperAdmin\" class=\"tab-content\">\n        <div class=\"section-header\">\n          <h2>用户管理</h2>\n          <div class=\"user-filters\">\n            <input v-model=\"userSearchTerm\" placeholder=\"搜索用户...\" class=\"form-input\">\n            <button class=\"btn btn-primary\" @click=\"loadUsers\">\n              <i class=\"fas fa-search\"></i> 搜索\n            </button>\n          </div>\n        </div>\n\n        <div class=\"users-container\">\n          <table class=\"users-table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>用户名</th>\n                <th>姓名</th>\n                <th>电话</th>\n                <th>邮箱</th>\n                <th>车辆数</th>\n                <th>订单数</th>\n                <th>操作</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\n                <td>{{ user.id }}</td>\n                <td>{{ user.username }}</td>\n                <td>{{ user.name }}</td>\n                <td>{{ user.phone }}</td>\n                <td>{{ user.email }}</td>\n                <td>{{ user.vehicleCount || 0 }}</td>\n                <td>{{ user.orderCount || 0 }}</td>\n                <td>\n                  <button class=\"btn btn-outline btn-sm\" @click=\"viewUserDetail(user)\">\n                    查看\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </main>\n\n    <!-- 订单分配模态框 -->\n    <div v-if=\"showAssignModal && selectedOrder\" class=\"modal-overlay\" @click=\"closeAssignModal\">\n      <div class=\"modal-content\" @click.stop>\n        <div class=\"modal-header\">\n          <h2>分配订单: {{ selectedOrder.orderNumber }}</h2>\n          <button class=\"modal-close\" @click=\"closeAssignModal\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"assign-form\">\n            <div class=\"form-group\">\n              <label class=\"form-label\">选择技师</label>\n              <div class=\"technician-selection\">\n                <div v-for=\"tech in availableTechnicians\" :key=\"tech.id\" class=\"technician-option\">\n                  <input \n                    type=\"checkbox\" \n                    :id=\"`tech-${tech.id}`\" \n                    v-model=\"assignForm.technicianIds\" \n                    :value=\"tech.id\"\n                  >\n                  <label :for=\"`tech-${tech.id}`\" class=\"technician-label\">\n                    <div class=\"tech-info\">\n                      <span class=\"tech-name\">{{ tech.name }}</span>\n                      <span class=\"tech-skill\">{{ getSkillTypeName(tech.skillType) }}</span>\n                      <span class=\"tech-rate\">¥{{ tech.hourlyRate }}/小时</span>\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">工时费用</label>\n              <input v-model=\"assignForm.laborCost\" type=\"number\" step=\"0.01\" class=\"form-input\" placeholder=\"输入工时费用\">\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">材料费用</label>\n              <input v-model=\"assignForm.materialCost\" type=\"number\" step=\"0.01\" class=\"form-input\" placeholder=\"输入材料费用\">\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-label\">总费用</label>\n              <input v-model=\"totalCost\" type=\"number\" step=\"0.01\" class=\"form-input\" readonly>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button @click=\"confirmAssign\" class=\"btn btn-primary\">\n            <i class=\"fas fa-check\"></i> 确认分配\n          </button>\n          <button @click=\"closeAssignModal\" class=\"btn btn-outline\">\n            <i class=\"fas fa-times\"></i> 取消\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AdminDashboard',\n  data() {\n    return {\n      user: {},\n      activeTab: 'overview',\n      showUserMenu: false,\n      showAssignModal: false,\n      showCreateOrder: false,\n      showCreateTechnician: false,\n      showOrderDetailModal: false,\n      selectedOrder: null,\n      selectedOrderDetail: null,\n      orderFilter: '',\n      userSearchTerm: '',\n      isLoading: false,\n      allOrders: [],\n      technicians: [],\n      users: [],\n      dashboardStats: {\n        totalOrders: 0,\n        pendingOrders: 0,\n        completedOrders: 0,\n        activeTechnicians: 0\n      },\n      statistics: {\n        totalRevenue: 0,\n        laborCost: 0,\n        materialCost: 0,\n        technicianStats: [],\n        negativeFeedback: []\n      },\n      statisticsDateRange: {\n        start: '',\n        end: ''\n      },\n      assignForm: {\n        technicianIds: [],\n        laborCost: 0,\n        materialCost: 0\n      }\n    }\n  },\n  computed: {\n    isManager() {\n      return this.user.role === 'MANAGER';\n    },\n    isSuperAdmin() {\n      return this.user.role === 'SUPER_ADMIN';\n    },\n    filteredOrders() {\n      if (!this.orderFilter) return this.allOrders;\n      return this.allOrders.filter(order => order.status === this.orderFilter);\n    },\n    filteredUsers() {\n      if (!this.userSearchTerm) return this.users;\n      return this.users.filter(user => \n        user.name.toLowerCase().includes(this.userSearchTerm.toLowerCase()) ||\n        user.username.toLowerCase().includes(this.userSearchTerm.toLowerCase())\n      );\n    },\n    recentOrders() {\n      return this.allOrders.slice(0, 10);\n    },\n    availableTechnicians() {\n      return this.technicians.filter(tech => tech.status !== 'INACTIVE');\n    },\n    totalCost() {\n      return (parseFloat(this.assignForm.laborCost) || 0) + (parseFloat(this.assignForm.materialCost) || 0);\n    }\n  },\n  created() {\n    this.loadUserInfo();\n    this.loadData();\n  },\n  methods: {\n    loadUserInfo() {\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        this.user = JSON.parse(userData);\n        console.log('加载的管理员数据:', this.user);\n        \n        if (!this.user.id) {\n          console.error('管理员数据中缺少ID字段:', this.user);\n          this.$emit('message', '用户数据错误，请重新登录', 'error');\n          this.logout();\n        }\n      } else {\n        console.error('localStorage中没有管理员数据');\n        this.$emit('message', '未找到用户信息，请重新登录', 'error');\n        this.logout();\n      }\n    },\n    async loadData() {\n      try {\n        this.isLoading = true;\n        \n        // 先加载基础数据\n        await this.loadOrders();\n        await this.loadTechnicians();\n        \n        if (this.isSuperAdmin) {\n          await this.loadUsers();\n        }\n        \n        // 然后基于基础数据计算统计信息\n        await this.loadDashboardStats();\n        \n        // 如果是超级管理员，初始化统计分析数据\n        if (this.isSuperAdmin) {\n          this.calculateLocalStatistics();\n        }\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.$emit('message', '加载数据失败', 'error');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    \n    async refreshData() {\n      this.$emit('message', '正在刷新数据...', 'info');\n      await this.loadData();\n      this.$emit('message', '数据刷新完成', 'success');\n    },\n    async loadOrders() {\n      try {\n        const response = await this.$axios.get('/repair-orders');\n        this.allOrders = Array.isArray(response.data) ? response.data : [];\n        console.log('从API加载的订单数据:', this.allOrders);\n        console.log('订单数量:', this.allOrders.length);\n      } catch (error) {\n        console.error('加载订单失败:', error);\n        console.error('错误详情:', error.response?.data || error.message);\n        this.allOrders = [];\n        this.$emit('message', '加载订单数据失败: ' + (error.response?.data?.message || error.message), 'error');\n      }\n    },\n    async loadTechnicians() {\n      try {\n        const response = await this.$axios.get('/technicians');\n        this.technicians = Array.isArray(response.data) ? response.data : [];\n        console.log('从API加载的技师数据:', this.technicians);\n        console.log('技师数量:', this.technicians.length);\n      } catch (error) {\n        console.error('加载技师失败:', error);\n        console.error('错误详情:', error.response?.data || error.message);\n        this.technicians = [];\n        this.$emit('message', '加载技师数据失败: ' + (error.response?.data?.message || error.message), 'error');\n      }\n    },\n    async loadUsers() {\n      try {\n        const response = await this.$axios.get('/users');\n        this.users = Array.isArray(response.data) ? response.data : [];\n        console.log('加载的用户数据:', this.users);\n      } catch (error) {\n        console.error('加载用户失败:', error);\n        this.users = [];\n      }\n    },\n    async loadDashboardStats() {\n      try {\n        // 尝试从API获取统计数据\n        const response = await this.$axios.get('/admins/dashboard-stats');\n        this.dashboardStats = response.data;\n        console.log('从API加载的统计数据:', this.dashboardStats);\n      } catch (error) {\n        console.error('加载统计数据失败，使用本地计算:', error);\n        // 确保数据已初始化\n        const orders = Array.isArray(this.allOrders) ? this.allOrders : [];\n        const techs = Array.isArray(this.technicians) ? this.technicians : [];\n        \n        // 基于本地数据计算统计信息\n        this.dashboardStats = {\n          totalOrders: orders.length,\n          pendingOrders: orders.filter(o => o.status === 'PENDING').length,\n          completedOrders: orders.filter(o => o.status === 'COMPLETED').length,\n          activeTechnicians: techs.length // 移除状态过滤，因为模拟数据没有status字段\n        };\n        console.log('本地计算的统计数据:', this.dashboardStats);\n      }\n    },\n    async loadStatistics() {\n      if (!this.isSuperAdmin) return;\n      \n      try {\n        // 尝试从API加载各种统计数据\n        const [revenueStats, techStats, feedbackStats] = await Promise.all([\n          this.$axios.get('/repair-orders/analysis/monthly', {\n            params: { year: 2024, month: 12 }\n          }).catch(() => null),\n          this.$axios.get('/repair-orders/task-statistics', {\n            params: { \n              startDate: this.statisticsDateRange.start,\n              endDate: this.statisticsDateRange.end\n            }\n          }).catch(() => null),\n          this.$axios.get('/repair-orders/negative-feedback').catch(() => null)\n        ]);\n        \n        // 如果API调用失败，基于本地数据计算统计信息\n        if (!revenueStats || !techStats || !feedbackStats) {\n          this.calculateLocalStatistics();\n        } else {\n          this.statistics = {\n            totalRevenue: revenueStats.data?.total_cost || 0,\n            laborCost: revenueStats.data?.total_labor_cost || 0,\n            materialCost: revenueStats.data?.total_material_cost || 0,\n            technicianStats: techStats.data || [],\n            negativeFeedback: feedbackStats.data || []\n          };\n        }\n      } catch (error) {\n        console.error('加载统计数据失败，使用本地计算:', error);\n        this.calculateLocalStatistics();\n      }\n    },\n    \n    calculateLocalStatistics() {\n      // 确保数据已初始化\n      if (!Array.isArray(this.allOrders)) {\n        this.allOrders = [];\n      }\n      if (!Array.isArray(this.technicians)) {\n        this.technicians = [];\n      }\n      \n      // 基于本地订单数据计算统计信息\n      const completedOrders = this.allOrders.filter(o => o.status === 'COMPLETED');\n      \n      // 计算收入统计\n      const totalRevenue = completedOrders.reduce((sum, order) => sum + (order.totalCost || 0), 0);\n      const laborCost = completedOrders.reduce((sum, order) => sum + (order.laborCost || 0), 0);\n      const materialCost = completedOrders.reduce((sum, order) => sum + (order.materialCost || 0), 0);\n      \n      // 计算技师统计\n      const technicianStats = this.technicians.map(tech => {\n        const techOrders = completedOrders.filter(order => \n          order.technicians && order.technicians.some(t => t.id === tech.id)\n        );\n        \n        return {\n          technicianId: tech.id,\n          technicianName: tech.name,\n          skillType: tech.skillType,\n          completedTasks: techOrders.length,\n          totalEarnings: techOrders.reduce((sum, order) => sum + (order.laborCost || 0), 0),\n          averageRating: 4.5 // 模拟评分\n        };\n      });\n      \n      // 模拟负面反馈数据\n      const negativeFeedback = [\n        {\n          orderId: 1,\n          orderNumber: 'RO-2024-001',\n          rating: 2,\n          comment: '服务态度需要改进',\n          technicianName: '李师傅',\n          date: '2024-12-20T10:00:00'\n        }\n      ];\n      \n      this.statistics = {\n        totalRevenue,\n        laborCost,\n        materialCost,\n        technicianStats,\n        negativeFeedback\n      };\n    },\n    assignOrder(order) {\n      this.selectedOrder = order;\n      this.assignForm = {\n        technicianIds: [],\n        laborCost: 0,\n        materialCost: 0\n      };\n      this.showAssignModal = true;\n    },\n    async confirmAssign() {\n      try {\n        const updateData = {\n          technicianIds: this.assignForm.technicianIds,\n          laborCost: parseFloat(this.assignForm.laborCost),\n          materialCost: parseFloat(this.assignForm.materialCost),\n          totalCost: this.totalCost,\n          status: 'ASSIGNED'\n        };\n        \n        await this.$axios.put(`/repair-orders/${this.selectedOrder.id}`, updateData);\n        \n        // 更新本地数据\n        const orderIndex = this.allOrders.findIndex(o => o.id === this.selectedOrder.id);\n        if (orderIndex !== -1) {\n          this.allOrders[orderIndex] = { ...this.allOrders[orderIndex], ...updateData };\n        }\n        \n        this.closeAssignModal();\n        this.$emit('message', '订单分配成功', 'success');\n        // 重新加载数据以更新统计信息\n        await this.loadData();\n      } catch (error) {\n        console.error('分配订单失败:', error);\n        this.$emit('message', '分配订单失败', 'error');\n      }\n    },\n    closeAssignModal() {\n      this.showAssignModal = false;\n      this.selectedOrder = null;\n    },\n    async viewOrderDetail(order) {\n      try {\n        // 获取订单详细信息\n        const response = await this.$axios.get(`/repair-orders/${order.id}`);\n        this.selectedOrderDetail = response.data;\n        this.showOrderDetailModal = true;\n      } catch (error) {\n        console.error('获取订单详情失败:', error);\n        this.$emit('message', '获取订单详情失败', 'error');\n      }\n    },\n    closeOrderDetailModal() {\n      this.showOrderDetailModal = false;\n      this.selectedOrderDetail = null;\n    },\n    editOrder(order) {\n      // 实现订单编辑\n      this.$emit('message', '订单编辑功能开发中', 'info');\n    },\n    editTechnician(technician) {\n      // 实现技师编辑\n      this.$emit('message', '技师编辑功能开发中', 'info');\n    },\n    async deleteTechnician(technician) {\n      if (confirm(`确定要删除技师 ${technician.name} 吗？此操作不可撤销。`)) {\n        try {\n          await this.$axios.delete(`/technicians/${technician.id}`);\n          this.$emit('message', '技师删除成功', 'success');\n          // 重新加载技师列表\n          await this.loadTechnicians();\n          // 重新加载统计数据\n          await this.loadDashboardStats();\n        } catch (error) {\n          console.error('删除技师失败:', error);\n          this.$emit('message', '删除技师失败: ' + (error.response?.data?.message || error.message), 'error');\n        }\n      }\n    },\n    viewUserDetail(user) {\n      // 实现用户详情查看\n      this.$emit('message', '用户详情功能开发中', 'info');\n    },\n    toggleUserMenu() {\n      this.showUserMenu = !this.showUserMenu;\n    },\n    getRoleName(role) {\n      const roleMap = {\n        'MANAGER': '经理',\n        'SUPER_ADMIN': '超级管理员'\n      };\n      return roleMap[role] || role;\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待处理',\n        'ASSIGNED': '已分配',\n        'IN_PROGRESS': '进行中',\n        'COMPLETED': '已完成',\n        'CANCELLED': '已取消'\n      };\n      return statusMap[status] || status;\n    },\n    getSkillTypeName(skillType) {\n      const skillMap = {\n        'MECHANIC': '机械维修',\n        'ELECTRICIAN': '电气维修',\n        'BODY_WORK': '车身维修',\n        'PAINT': '喷漆',\n        'DIAGNOSTIC': '诊断'\n      };\n      return skillMap[skillType] || skillType;\n    },\n    getVehicleDisplay(order) {\n      if (order.vehicle) {\n        const { licensePlate, brand, model, year } = order.vehicle;\n        if (licensePlate && brand && model) {\n          return `${licensePlate} - ${brand} ${model}${year ? ` (${year})` : ''}`;\n        } else if (licensePlate) {\n          return licensePlate;\n        }\n      }\n      return '未知车辆';\n    },\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString('zh-CN');\n    },\n    logout() {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userRole');\n      this.$router.push('/');\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 这里包含所有的CSS样式，与之前的技师页面类似但使用蓝色主题 */\n.admin-dashboard {\n  min-height: 100vh;\n  background: #f8fafc;\n}\n\n.dashboard-header {\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 0 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #3b82f6;\n}\n\n.nav-menu {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-menu a {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 1rem;\n  text-decoration: none;\n  color: #6b7280;\n  transition: color 0.2s;\n  border-bottom: 3px solid transparent;\n}\n\n.nav-menu a:hover,\n.nav-menu a.active {\n  color: #3b82f6;\n  border-bottom-color: #3b82f6;\n}\n\n.header-right {\n  position: relative;\n}\n\n.user-menu {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  border-radius: 0.5rem;\n  transition: background-color 0.2s;\n}\n\n.user-menu:hover {\n  background: #f3f4f6;\n}\n\n.user-avatar {\n  width: 2rem;\n  height: 2rem;\n  background: #3b82f6;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n}\n\n.user-role {\n  font-size: 0.75rem;\n  color: #6b7280;\n  background: #f3f4f6;\n  padding: 0.25rem 0.5rem;\n  border-radius: 9999px;\n}\n\n.user-dropdown {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n  min-width: 200px;\n  z-index: 1000;\n}\n\n.user-dropdown a {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  text-decoration: none;\n  color: #374151;\n  transition: background-color 0.2s;\n}\n\n.user-dropdown a:hover {\n  background: #f3f4f6;\n}\n\n.dashboard-main {\n  padding: 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.tab-content {\n  animation: fadeIn 0.3s ease;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.welcome-section {\n  margin-bottom: 2rem;\n}\n\n.welcome-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: center;\n}\n\n.welcome-section h1 {\n  font-size: 2rem;\n  color: #1f2937;\n  margin-bottom: 1rem;\n}\n\n.role-badge {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: linear-gradient(135deg, #3b82f6, #2563eb);\n  color: white;\n  border-radius: 9999px;\n  font-weight: 500;\n}\n\n.stats-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n  margin-bottom: 2rem;\n}\n\n.stat-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.stat-icon {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1.25rem;\n}\n\n.stat-content h3 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin: 0;\n  color: #1f2937;\n}\n\n.stat-content p {\n  margin: 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.quick-actions {\n  margin-bottom: 2rem;\n}\n\n.quick-actions h2 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n.action-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n}\n\n.action-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  text-align: center;\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.action-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 15px rgba(0,0,0,0.1);\n}\n\n.action-card i {\n  font-size: 2rem;\n  color: #3b82f6;\n  margin-bottom: 1rem;\n}\n\n.action-card h3 {\n  margin: 0 0 0.5rem 0;\n  color: #1f2937;\n}\n\n.action-card p {\n  margin: 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.recent-orders {\n  margin-bottom: 2rem;\n}\n\n.recent-orders h2 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n}\n\n.orders-table {\n  background: white;\n  border-radius: 1rem;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.orders-table table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.orders-table th,\n.orders-table td {\n  padding: 1rem;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.orders-table th {\n  background: #f9fafb;\n  font-weight: 600;\n  color: #374151;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.section-header h2 {\n  font-size: 1.5rem;\n  color: #1f2937;\n  margin: 0;\n}\n\n.order-filters,\n.date-filters,\n.user-filters {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n.orders-container,\n.technicians-container {\n  display: grid;\n  gap: 1.5rem;\n}\n\n.order-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.order-header h3 {\n  margin: 0;\n  color: #1f2937;\n}\n\n.order-header p {\n  margin: 0.25rem 0 0 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.status-badge {\n  padding: 0.5rem 1rem;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.status-badge.pending {\n  background: #fef3c7;\n  color: #d97706;\n}\n\n.status-badge.assigned {\n  background: #dbeafe;\n  color: #2563eb;\n}\n\n.status-badge.in_progress {\n  background: #e0e7ff;\n  color: #6366f1;\n}\n\n.status-badge.completed {\n  background: #d1fae5;\n  color: #059669;\n}\n\n.order-info {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1rem;\n}\n\n.info-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: #6b7280;\n}\n\n.info-item i {\n  color: #3b82f6;\n  width: 16px;\n}\n\n.assigned-technicians {\n  margin-bottom: 1rem;\n}\n\n.assigned-technicians h4 {\n  margin: 0 0 0.5rem 0;\n  color: #374151;\n  font-size: 0.875rem;\n}\n\n.technician-list {\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n}\n\n.technician-tag {\n  background: #f3f4f6;\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.75rem;\n  color: #374151;\n}\n\n.order-footer {\n  display: flex;\n  gap: 1rem;\n}\n\n.technician-card {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n}\n\n.tech-avatar {\n  width: 4rem;\n  height: 4rem;\n  background: linear-gradient(135deg, #3b82f6, #2563eb);\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 1.5rem;\n}\n\n.tech-info {\n  flex: 1;\n}\n\n.tech-info h3 {\n  margin: 0 0 0.5rem 0;\n  color: #1f2937;\n}\n\n.tech-id {\n  color: #6b7280;\n  font-size: 0.875rem;\n  margin-bottom: 1rem;\n}\n\n.tech-details {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n}\n\n.detail-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  color: #374151;\n}\n\n.detail-item i {\n  color: #3b82f6;\n  width: 1rem;\n}\n\n.tech-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.statistics-container {\n  display: grid;\n  gap: 2rem;\n}\n\n.stat-section {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.stat-section h3 {\n  margin: 0 0 1rem 0;\n  color: #1f2937;\n  border-bottom: 2px solid #3b82f6;\n  padding-bottom: 0.5rem;\n}\n\n.revenue-stats {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.revenue-card {\n  text-align: center;\n  padding: 1rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n}\n\n.revenue-card h4 {\n  margin: 0 0 0.5rem 0;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.amount {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #1f2937;\n}\n\n.technician-stats table,\n.feedback-stats table,\n.users-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.technician-stats th,\n.technician-stats td,\n.feedback-stats th,\n.feedback-stats td,\n.users-table th,\n.users-table td {\n  padding: 0.75rem;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.technician-stats th,\n.feedback-stats th,\n.users-table th {\n  background: #f9fafb;\n  font-weight: 600;\n  color: #374151;\n}\n\n.users-container {\n  background: white;\n  border-radius: 1rem;\n  overflow: hidden;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.05);\n}\n\n.empty-state {\n  text-align: center;\n  padding: 3rem 1rem;\n  color: #6b7280;\n}\n\n.empty-state i {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  opacity: 0.5;\n}\n\n.empty-state h3 {\n  margin-bottom: 0.5rem;\n  color: #374151;\n}\n\n/* 模态框样式 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 1rem;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 1rem;\n  max-width: 600px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: #1f2937;\n  font-size: 1.5rem;\n}\n\n.modal-close {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: #6b7280;\n  cursor: pointer;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n}\n\n.modal-close:hover {\n  background: #f3f4f6;\n  color: #374151;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  padding: 1.5rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.assign-form {\n  display: grid;\n  gap: 1rem;\n}\n\n.technician-selection {\n  display: grid;\n  gap: 0.5rem;\n  max-height: 200px;\n  overflow-y: auto;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  padding: 1rem;\n}\n\n.technician-option {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.technician-label {\n  flex: 1;\n  cursor: pointer;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: background-color 0.2s;\n}\n\n.technician-label:hover {\n  background: #f9fafb;\n}\n\n.tech-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tech-name {\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.tech-skill {\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.tech-rate {\n  color: #059669;\n  font-weight: 500;\n}\n\n/* 通用按钮样式 */\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-decoration: none;\n}\n\n.btn-primary {\n  background: #3b82f6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #2563eb;\n}\n\n.btn-outline {\n  background: transparent;\n  color: #3b82f6;\n  border: 1px solid #3b82f6;\n}\n\n.btn-outline:hover {\n  background: #3b82f6;\n  color: white;\n}\n\n.btn-danger {\n  background: #ef4444;\n  color: white;\n}\n\n.btn-danger:hover {\n  background: #dc2626;\n}\n\n.btn-sm {\n  padding: 0.375rem 0.75rem;\n  font-size: 0.75rem;\n}\n\n.btn:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n\n/* 表单样式 */\n.form-input {\n  padding: 0.5rem 0.75rem;\n  border: 1px solid #d1d5db;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  transition: border-color 0.2s;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n.form-label {\n  display: block;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 0.25rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .dashboard-header {\n    padding: 0 1rem;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .header-left {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav-menu {\n    overflow-x: auto;\n  }\n  \n  .dashboard-main {\n    padding: 1rem;\n  }\n  \n  .stats-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .action-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .section-header {\n    flex-direction: column;\n    gap: 1rem;\n    align-items: stretch;\n  }\n  \n  .order-info {\n    grid-template-columns: 1fr;\n  }\n  \n  .tech-details {\n    grid-template-columns: 1fr;\n  }\n  \n  .revenue-stats {\n    grid-template-columns: 1fr;\n  }\n  \n  .modal-content {\n    margin: 1rem;\n    max-height: calc(100vh - 2rem);\n  }\n  \n  .modal-footer {\n    flex-direction: column;\n  }\n  \n  .welcome-content {\n    flex-direction: column;\n    gap: 1rem;\n    text-align: center;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}